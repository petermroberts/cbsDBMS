# Generated by Django 4.1.7 on 2023-03-27 20:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=11)),
                ('email', models.EmailField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('blood_type', models.CharField(choices=[('AP', 'A+'), ('AN', 'A-'), ('BP', 'B+'), ('BN', 'B-'), ('ABP', 'AB+'), ('ABN', 'AB-'), ('OP', 'O+'), ('ON', 'O-')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='DonorShippingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Donors.donor')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(max_length=7)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('province', models.CharField(choices=[('AB', 'Alberta'), ('BC', 'British Columbia'), ('MB', 'Manitoba'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NT', 'Norhtwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('ON', 'Ontario'), ('PE', 'Prince Edward Island'), ('QC', 'Quebec'), ('SK', 'Saskatchewan'), ('YT', 'Yukon')], max_length=2)),
                ('donors', models.ManyToManyField(blank=True, related_name='shipping_info', through='Donors.DonorShippingInfo', to='Donors.donor')),
            ],
        ),
        migrations.AddField(
            model_name='donorshippinginfo',
            name='shipping_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Donors.shippinginfo'),
        ),
        migrations.CreateModel(
            name='DonorContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Donors.contactinfo')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Donors.donor')),
            ],
        ),
        migrations.AddConstraint(
            model_name='donor',
            constraint=models.CheckConstraint(check=models.Q(('blood_type__in', ('AP', 'AN', 'BP', 'BN', 'ABP', 'ABN', 'OP', 'ON'))), name='blood_type'),
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='donor',
            field=models.ManyToManyField(blank=True, related_name='contact_info', through='Donors.DonorContactInfo', to='Donors.donor'),
        ),
        migrations.AddConstraint(
            model_name='shippinginfo',
            constraint=models.CheckConstraint(check=models.Q(('province__in', ('AB', 'BC', 'MB', 'NB', 'NL', 'NT', 'NS', 'NU', 'ON', 'PE', 'QC', 'SK', 'YT'))), name='province_invalid'),
        ),
        migrations.AlterUniqueTogether(
            name='donorshippinginfo',
            unique_together={('donor', 'shipping_info')},
        ),
        migrations.AlterUniqueTogether(
            name='donorcontactinfo',
            unique_together={('donor', 'contact_info')},
        ),
    ]
